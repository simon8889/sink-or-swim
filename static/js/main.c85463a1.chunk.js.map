{"version":3,"sources":["components/Column/Item/Item.js","components/Column/Column.js","App.js","reportWebVitals.js","index.js"],"names":["Item","useState","value","setValue","className","onChange","e","target","Column","title","content","setContent","undefined","itemRemove","setItemRemove","scrollElement","useRef","useEffect","filter","item","key","container","current","scrollTop","scrollHeight","ref","length","onClick","itemId","uuidV4","newItem","newContent","App","appBody","useScreenshot","takeScreenshot","then","data","download","catch","err","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yXAaeA,EAVF,WACT,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEA,OACI,qBAAKC,UAAU,OAAf,SACI,0BAAUF,MAAOA,EAAOG,SAAU,SAACC,GAAD,OAAOH,EAASG,EAAEC,OAAOL,QAAQE,UAAU,mBCkD1EI,EAlDA,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAEb,EAA8BR,mBAAS,IAAvC,mBAAOS,EAAP,KAAgBC,EAAhB,KACA,EAAoCV,wBAASW,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACMC,EAAgBC,iBAAO,MAG7BC,qBAAU,WACNN,EAAWD,EAAQQ,QAAO,SAAAC,GAAI,OAAIN,IAAeM,EAAKC,UACvD,CAACP,IAEJI,qBAAU,WACN,IAAMI,EAAYN,EAAcO,QAChCD,EAAUE,UAAYF,EAAUG,eACjC,CAACd,IAmBJ,OACI,sBAAKN,UAAU,SAAf,UACI,6BAAMK,IACN,qBAAKL,UAAU,2BAA2BqB,IAAKV,EAA/C,SACML,EAAQgB,OAAShB,EACf,qBAAKN,UAAU,gBAAf,SACI,6CAIZ,qBAAKA,UAAU,cAAcuB,QA3BnB,WACd,IAAOC,EAASC,cAEVC,EACF,sBAAK1B,UAAU,eAAf,UACI,qBAAKuB,QAAS,kBAAMb,EAAcc,IAASxB,UAAU,qBAArD,SACI,cAAC,IAAD,CAAkBA,UAAU,yBAEhC,cAAC,EAAD,MAJgCwB,GAQlCG,EAAU,sBAAOrB,GAAP,CAAgBoB,IAChCnB,EAAWoB,IAcP,SACI,cAAC,IAAD,CAAS3B,UAAU,0BCjBpB4B,EA1BH,WACR,IAAMC,EAAUjB,iBAAO,MACvB,EAAgCkB,cAAhC,mBAAcC,GAAd,WAOA,OACI,sBAAK/B,UAAU,MAAMqB,IAAMQ,EAA3B,UACI,qBAAK7B,UAAU,gBAAgBuB,QARtB,WACbQ,EAAeF,EAAQX,SAClBc,MAAK,SAAAC,GAAI,OAAIC,IAASD,EAAM,eAAgB,gBAC5CE,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAK1B,SACI,cAAC,IAAD,MAEJ,oBAAIpC,UAAU,aAAd,0BACA,sBAAKA,UAAU,wBAAf,UACI,cAAC,EAAD,CAAQK,MAAM,WACd,cAAC,EAAD,CAAQA,MAAM,YACd,cAAC,EAAD,CAAQA,MAAM,WACd,cAAC,EAAD,CAAQA,MAAM,oBACd,cAAC,EAAD,CAAQA,MAAM,4BCjBfkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5BZ,M","file":"static/js/main.c85463a1.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport \"./Item.css\"\r\n\r\nconst Item = () => {\r\n    const [value, setValue] = useState(\"\")\r\n    \r\n    return (\r\n        <div className=\"item\">\r\n            <textarea value={value} onChange={(e) => setValue(e.target.value)} className=\"item__input\"></textarea>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default Item\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff'\r\nimport { v4 as uuidV4 } from \"uuid\"\r\nimport \"./Column.css\"\r\n\r\nimport Item from \"./Item/Item.js\"\r\n\r\nconst Column = ({title}) => {\r\n    \r\n    const [content, setContent] = useState([])\r\n    const [itemRemove, setItemRemove] = useState(undefined)\r\n    const scrollElement = useRef(null)\r\n    \r\n    \r\n    useEffect(() => {\r\n        setContent(content.filter(item => itemRemove !== item.key))\r\n    }, [itemRemove])\r\n    \r\n    useEffect(() => {\r\n        const container = scrollElement.current\r\n        container.scrollTop = container.scrollHeight\r\n    }, [content])\r\n    \r\n    const handleAdd = () => {\r\n        const  itemId = uuidV4()\r\n        \r\n        const newItem = (\r\n            <div className=\"column__item\"  key={itemId}>\r\n                <div onClick={() => setItemRemove(itemId)} className=\"column__itemDelete\">\r\n                    <HighlightOffIcon className=\"column__deleteIcon\" />\r\n                </div>\r\n                <Item />\r\n            </div>\r\n        )\r\n        \r\n        const newContent = [...content, newItem]\r\n        setContent(newContent)\r\n        \r\n    }\r\n    \r\n    return (\r\n        <div className=\"column\">\r\n            <h2>{ title }</h2>\r\n            <div className=\"column__contentContainer\" ref={scrollElement}>\r\n                { content.length ? content : (\r\n                    <div className=\"column__empty\">\r\n                        <p>Add item</p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className=\"column__add\" onClick={ handleAdd }>\r\n                <AddIcon className=\"column__addIcon\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Column\r\n","import React, { useRef } from 'react'\nimport { useScreenshot } from 'use-react-screenshot'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport download from \"downloadjs\"\nimport './App.css';\n\n\nimport Column from \"./components/Column/Column.js\"\n\nconst App = () => {\n    const appBody = useRef(null)\n    const [image, takeScreenshot] = useScreenshot()\n    const getImage = () => {\n        takeScreenshot(appBody.current)\n            .then(data => download(data, \"sink-or-swim\", \"image/png\"))\n            .catch(err => console.log(err))\n    }\n\n    return (\n        <div className=\"app\" ref={ appBody }>\n            <div className=\"app__download\" onClick={ getImage }>\n                <GetAppIcon />\n            </div>\n            <h1 className=\"app__title\">Sink or Swim</h1>\n            <div className=\"app__columnsContainer\">\n                <Column title=\"Define\" />\n                <Column title=\"Prevent\" />\n                <Column title=\"Repair\" />\n                <Column title=\"Action benefits\" />\n                <Column title=\"Inaction effects\" />\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}